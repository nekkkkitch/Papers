// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: PapersService.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_PapersService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_PapersService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{1}
}

type Paper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Price float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Paper) Reset() {
	*x = Paper{}
	mi := &file_PapersService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Paper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paper) ProtoMessage() {}

func (x *Paper) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paper.ProtoReflect.Descriptor instead.
func (*Paper) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{2}
}

func (x *Paper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Paper) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type PaperRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      []byte `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PaperName   string `protobuf:"bytes,2,opt,name=paperName,proto3" json:"paperName,omitempty"`
	PaperAmount int32  `protobuf:"varint,3,opt,name=paperAmount,proto3" json:"paperAmount,omitempty"`
}

func (x *PaperRequest) Reset() {
	*x = PaperRequest{}
	mi := &file_PapersService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaperRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperRequest) ProtoMessage() {}

func (x *PaperRequest) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperRequest.ProtoReflect.Descriptor instead.
func (*PaperRequest) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{3}
}

func (x *PaperRequest) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *PaperRequest) GetPaperName() string {
	if x != nil {
		return x.PaperName
	}
	return ""
}

func (x *PaperRequest) GetPaperAmount() int32 {
	if x != nil {
		return x.PaperAmount
	}
	return 0
}

type AvailablePapers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Papers []byte `protobuf:"bytes,1,opt,name=papers,proto3" json:"papers,omitempty"`
}

func (x *AvailablePapers) Reset() {
	*x = AvailablePapers{}
	mi := &file_PapersService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvailablePapers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablePapers) ProtoMessage() {}

func (x *AvailablePapers) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablePapers.ProtoReflect.Descriptor instead.
func (*AvailablePapers) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{4}
}

func (x *AvailablePapers) GetPapers() []byte {
	if x != nil {
		return x.Papers
	}
	return nil
}

type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_PapersService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_PapersService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_PapersService_proto_rawDescGZIP(), []int{5}
}

func (x *Status) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_PapersService_proto protoreflect.FileDescriptor

var file_PapersService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x16, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x09, 0x0a, 0x07,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x05, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x66, 0x0a, 0x0c, 0x50, 0x61,
	0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x29, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x61, 0x70, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xad, 0x03, 0x0a, 0x10, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x16,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x1e,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x08, 0x42, 0x75, 0x79, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12,
	0x1b, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x1b, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x30, 0x01, 0x12, 0x3a, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x14, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_PapersService_proto_rawDescOnce sync.Once
	file_PapersService_proto_rawDescData = file_PapersService_proto_rawDesc
)

func file_PapersService_proto_rawDescGZIP() []byte {
	file_PapersService_proto_rawDescOnce.Do(func() {
		file_PapersService_proto_rawDescData = protoimpl.X.CompressGZIP(file_PapersService_proto_rawDescData)
	})
	return file_PapersService_proto_rawDescData
}

var file_PapersService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_PapersService_proto_goTypes = []any{
	(*User)(nil),            // 0: PapersService.User
	(*Request)(nil),         // 1: PapersService.Request
	(*Paper)(nil),           // 2: PapersService.Paper
	(*PaperRequest)(nil),    // 3: PapersService.PaperRequest
	(*AvailablePapers)(nil), // 4: PapersService.AvailablePapers
	(*Status)(nil),          // 5: PapersService.Status
}
var file_PapersService_proto_depIdxs = []int32{
	1, // 0: PapersService.PapersManagement.GetAvailablePapers:input_type -> PapersService.Request
	0, // 1: PapersService.PapersManagement.GetUserPapers:input_type -> PapersService.User
	3, // 2: PapersService.PapersManagement.BuyPaper:input_type -> PapersService.PaperRequest
	3, // 3: PapersService.PapersManagement.SellPaper:input_type -> PapersService.PaperRequest
	3, // 4: PapersService.PapersManagement.Subscribe:input_type -> PapersService.PaperRequest
	2, // 5: PapersService.PapersManagement.Unsubscribe:input_type -> PapersService.Paper
	4, // 6: PapersService.PapersManagement.GetAvailablePapers:output_type -> PapersService.AvailablePapers
	4, // 7: PapersService.PapersManagement.GetUserPapers:output_type -> PapersService.AvailablePapers
	5, // 8: PapersService.PapersManagement.BuyPaper:output_type -> PapersService.Status
	5, // 9: PapersService.PapersManagement.SellPaper:output_type -> PapersService.Status
	2, // 10: PapersService.PapersManagement.Subscribe:output_type -> PapersService.Paper
	5, // 11: PapersService.PapersManagement.Unsubscribe:output_type -> PapersService.Status
	6, // [6:12] is the sub-list for method output_type
	0, // [0:6] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_PapersService_proto_init() }
func file_PapersService_proto_init() {
	if File_PapersService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PapersService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_PapersService_proto_goTypes,
		DependencyIndexes: file_PapersService_proto_depIdxs,
		MessageInfos:      file_PapersService_proto_msgTypes,
	}.Build()
	File_PapersService_proto = out.File
	file_PapersService_proto_rawDesc = nil
	file_PapersService_proto_goTypes = nil
	file_PapersService_proto_depIdxs = nil
}
